/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CuratedCustomer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5189991984934669324L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CuratedCustomer\",\"namespace\":\"com.example.model\",\"fields\":[{\"name\":\"customerNumber\",\"type\":\"int\"},{\"name\":\"customerName\",\"type\":\"string\"},{\"name\":\"contactLastName\",\"type\":\"string\"},{\"name\":\"contactFirstName\",\"type\":\"string\"},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"country\",\"type\":\"string\"}],\"connect.name\":\"com.example.model.CuratedCustomer\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CuratedCustomer> ENCODER =
      new BinaryMessageEncoder<CuratedCustomer>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CuratedCustomer> DECODER =
      new BinaryMessageDecoder<CuratedCustomer>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CuratedCustomer> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CuratedCustomer> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CuratedCustomer>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CuratedCustomer to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CuratedCustomer from a ByteBuffer. */
  public static CuratedCustomer fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int customerNumber;
  @Deprecated public java.lang.CharSequence customerName;
  @Deprecated public java.lang.CharSequence contactLastName;
  @Deprecated public java.lang.CharSequence contactFirstName;
  @Deprecated public java.lang.CharSequence state;
  @Deprecated public java.lang.CharSequence country;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CuratedCustomer() {}

  /**
   * All-args constructor.
   * @param customerNumber The new value for customerNumber
   * @param customerName The new value for customerName
   * @param contactLastName The new value for contactLastName
   * @param contactFirstName The new value for contactFirstName
   * @param state The new value for state
   * @param country The new value for country
   */
  public CuratedCustomer(java.lang.Integer customerNumber, java.lang.CharSequence customerName, java.lang.CharSequence contactLastName, java.lang.CharSequence contactFirstName, java.lang.CharSequence state, java.lang.CharSequence country) {
    this.customerNumber = customerNumber;
    this.customerName = customerName;
    this.contactLastName = contactLastName;
    this.contactFirstName = contactFirstName;
    this.state = state;
    this.country = country;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customerNumber;
    case 1: return customerName;
    case 2: return contactLastName;
    case 3: return contactFirstName;
    case 4: return state;
    case 5: return country;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customerNumber = (java.lang.Integer)value$; break;
    case 1: customerName = (java.lang.CharSequence)value$; break;
    case 2: contactLastName = (java.lang.CharSequence)value$; break;
    case 3: contactFirstName = (java.lang.CharSequence)value$; break;
    case 4: state = (java.lang.CharSequence)value$; break;
    case 5: country = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'customerNumber' field.
   * @return The value of the 'customerNumber' field.
   */
  public java.lang.Integer getCustomerNumber() {
    return customerNumber;
  }

  /**
   * Sets the value of the 'customerNumber' field.
   * @param value the value to set.
   */
  public void setCustomerNumber(java.lang.Integer value) {
    this.customerNumber = value;
  }

  /**
   * Gets the value of the 'customerName' field.
   * @return The value of the 'customerName' field.
   */
  public java.lang.CharSequence getCustomerName() {
    return customerName;
  }

  /**
   * Sets the value of the 'customerName' field.
   * @param value the value to set.
   */
  public void setCustomerName(java.lang.CharSequence value) {
    this.customerName = value;
  }

  /**
   * Gets the value of the 'contactLastName' field.
   * @return The value of the 'contactLastName' field.
   */
  public java.lang.CharSequence getContactLastName() {
    return contactLastName;
  }

  /**
   * Sets the value of the 'contactLastName' field.
   * @param value the value to set.
   */
  public void setContactLastName(java.lang.CharSequence value) {
    this.contactLastName = value;
  }

  /**
   * Gets the value of the 'contactFirstName' field.
   * @return The value of the 'contactFirstName' field.
   */
  public java.lang.CharSequence getContactFirstName() {
    return contactFirstName;
  }

  /**
   * Sets the value of the 'contactFirstName' field.
   * @param value the value to set.
   */
  public void setContactFirstName(java.lang.CharSequence value) {
    this.contactFirstName = value;
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.CharSequence getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.CharSequence value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Creates a new CuratedCustomer RecordBuilder.
   * @return A new CuratedCustomer RecordBuilder
   */
  public static com.example.model.CuratedCustomer.Builder newBuilder() {
    return new com.example.model.CuratedCustomer.Builder();
  }

  /**
   * Creates a new CuratedCustomer RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CuratedCustomer RecordBuilder
   */
  public static com.example.model.CuratedCustomer.Builder newBuilder(com.example.model.CuratedCustomer.Builder other) {
    return new com.example.model.CuratedCustomer.Builder(other);
  }

  /**
   * Creates a new CuratedCustomer RecordBuilder by copying an existing CuratedCustomer instance.
   * @param other The existing instance to copy.
   * @return A new CuratedCustomer RecordBuilder
   */
  public static com.example.model.CuratedCustomer.Builder newBuilder(com.example.model.CuratedCustomer other) {
    return new com.example.model.CuratedCustomer.Builder(other);
  }

  /**
   * RecordBuilder for CuratedCustomer instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CuratedCustomer>
    implements org.apache.avro.data.RecordBuilder<CuratedCustomer> {

    private int customerNumber;
    private java.lang.CharSequence customerName;
    private java.lang.CharSequence contactLastName;
    private java.lang.CharSequence contactFirstName;
    private java.lang.CharSequence state;
    private java.lang.CharSequence country;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.model.CuratedCustomer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customerNumber)) {
        this.customerNumber = data().deepCopy(fields()[0].schema(), other.customerNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customerName)) {
        this.customerName = data().deepCopy(fields()[1].schema(), other.customerName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.contactLastName)) {
        this.contactLastName = data().deepCopy(fields()[2].schema(), other.contactLastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.contactFirstName)) {
        this.contactFirstName = data().deepCopy(fields()[3].schema(), other.contactFirstName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.country)) {
        this.country = data().deepCopy(fields()[5].schema(), other.country);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CuratedCustomer instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.model.CuratedCustomer other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.customerNumber)) {
        this.customerNumber = data().deepCopy(fields()[0].schema(), other.customerNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customerName)) {
        this.customerName = data().deepCopy(fields()[1].schema(), other.customerName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.contactLastName)) {
        this.contactLastName = data().deepCopy(fields()[2].schema(), other.contactLastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.contactFirstName)) {
        this.contactFirstName = data().deepCopy(fields()[3].schema(), other.contactFirstName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.country)) {
        this.country = data().deepCopy(fields()[5].schema(), other.country);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'customerNumber' field.
      * @return The value.
      */
    public java.lang.Integer getCustomerNumber() {
      return customerNumber;
    }

    /**
      * Sets the value of the 'customerNumber' field.
      * @param value The value of 'customerNumber'.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder setCustomerNumber(int value) {
      validate(fields()[0], value);
      this.customerNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'customerNumber' field has been set.
      * @return True if the 'customerNumber' field has been set, false otherwise.
      */
    public boolean hasCustomerNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'customerNumber' field.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder clearCustomerNumber() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerName() {
      return customerName;
    }

    /**
      * Sets the value of the 'customerName' field.
      * @param value The value of 'customerName'.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder setCustomerName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.customerName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customerName' field has been set.
      * @return True if the 'customerName' field has been set, false otherwise.
      */
    public boolean hasCustomerName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customerName' field.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder clearCustomerName() {
      customerName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'contactLastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getContactLastName() {
      return contactLastName;
    }

    /**
      * Sets the value of the 'contactLastName' field.
      * @param value The value of 'contactLastName'.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder setContactLastName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.contactLastName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'contactLastName' field has been set.
      * @return True if the 'contactLastName' field has been set, false otherwise.
      */
    public boolean hasContactLastName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'contactLastName' field.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder clearContactLastName() {
      contactLastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'contactFirstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getContactFirstName() {
      return contactFirstName;
    }

    /**
      * Sets the value of the 'contactFirstName' field.
      * @param value The value of 'contactFirstName'.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder setContactFirstName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.contactFirstName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'contactFirstName' field has been set.
      * @return True if the 'contactFirstName' field has been set, false otherwise.
      */
    public boolean hasContactFirstName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'contactFirstName' field.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder clearContactFirstName() {
      contactFirstName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.CharSequence getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder setState(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.state = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder clearState() {
      state = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }

    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.country = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.example.model.CuratedCustomer.Builder clearCountry() {
      country = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CuratedCustomer build() {
      try {
        CuratedCustomer record = new CuratedCustomer();
        record.customerNumber = fieldSetFlags()[0] ? this.customerNumber : (java.lang.Integer) defaultValue(fields()[0]);
        record.customerName = fieldSetFlags()[1] ? this.customerName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.contactLastName = fieldSetFlags()[2] ? this.contactLastName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.contactFirstName = fieldSetFlags()[3] ? this.contactFirstName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.state = fieldSetFlags()[4] ? this.state : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.country = fieldSetFlags()[5] ? this.country : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CuratedCustomer>
    WRITER$ = (org.apache.avro.io.DatumWriter<CuratedCustomer>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CuratedCustomer>
    READER$ = (org.apache.avro.io.DatumReader<CuratedCustomer>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
